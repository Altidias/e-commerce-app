services:
  app:
    container_name: ecommerce-app
    image: ecommerce-web
    build: .
    depends_on:
      - mongo
    ports:
      - "3000:3000"
    networks:
      - frontend
      - backend

  mongo:
    container_name: ecommerce-db
    image: mongo:latest
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    restart: unless-stopped
    networks:
      - backend

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    depends_on:
      - mongo
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_BASICAUTH_USERNAME=user
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    ports:
      - "8081:8081"
    networks:
      - frontend
      - backend

  proxy:
    container_name: ecommerce-proxy
    image: nginx
    depends_on:
      - app
      - mongo-express
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./ssl/localhost.key:/etc/ssl/private/localhost.key
    ports:
      - "80:80"
      - "443:443"
      - "81:81" # mongo express access
    networks:
      - frontend

volumes:
  mongodata:

networks:
  backend:
    internal: true
  frontend:
